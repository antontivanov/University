//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace SharedTravelling
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
    private global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlTypeInfoProvider _provider;

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace SharedTravelling.SharedTravelling_XamlTypeInfo
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[22];
            _typeNameTable[0] = "SharedTravelling.ViewModels.MainWindowViewModel";
            _typeNameTable[1] = "Object";
            _typeNameTable[2] = "String";
            _typeNameTable[3] = "System.Windows.Input.ICommand";
            _typeNameTable[4] = "SharedTravelling.MainPage";
            _typeNameTable[5] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[6] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[7] = "SharedTravelling.ViewModels.AddCarViewModel";
            _typeNameTable[8] = "Boolean";
            _typeNameTable[9] = "SharedTravelling.Views.AddCar";
            _typeNameTable[10] = "SharedTravelling.ViewModels.AddTripViewModel";
            _typeNameTable[11] = "System.Collections.Generic.IList`1<String>";
            _typeNameTable[12] = "SharedTravelling.Views.AddTrip";
            _typeNameTable[13] = "SharedTravelling.ViewModels.RegisterViewModel";
            _typeNameTable[14] = "System.DateTime";
            _typeNameTable[15] = "System.ValueType";
            _typeNameTable[16] = "SharedTravelling.Views.Register";
            _typeNameTable[17] = "SharedTravelling.ViewModels.SearchTripsViewModel";
            _typeNameTable[18] = "System.Collections.Generic.IList`1<SharedTravelling.Models.TripsToShowModel>";
            _typeNameTable[19] = "SharedTravelling.Models.TripsToShowModel";
            _typeNameTable[20] = "Windows.UI.Xaml.Visibility";
            _typeNameTable[21] = "SharedTravelling.Views.SearchTrips";

            _typeTable = new global::System.Type[22];
            _typeTable[0] = typeof(global::SharedTravelling.ViewModels.MainWindowViewModel);
            _typeTable[1] = typeof(global::System.Object);
            _typeTable[2] = typeof(global::System.String);
            _typeTable[3] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[4] = typeof(global::SharedTravelling.MainPage);
            _typeTable[5] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[6] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[7] = typeof(global::SharedTravelling.ViewModels.AddCarViewModel);
            _typeTable[8] = typeof(global::System.Boolean);
            _typeTable[9] = typeof(global::SharedTravelling.Views.AddCar);
            _typeTable[10] = typeof(global::SharedTravelling.ViewModels.AddTripViewModel);
            _typeTable[11] = typeof(global::System.Collections.Generic.IList<global::System.String>);
            _typeTable[12] = typeof(global::SharedTravelling.Views.AddTrip);
            _typeTable[13] = typeof(global::SharedTravelling.ViewModels.RegisterViewModel);
            _typeTable[14] = typeof(global::System.DateTime);
            _typeTable[15] = typeof(global::System.ValueType);
            _typeTable[16] = typeof(global::SharedTravelling.Views.Register);
            _typeTable[17] = typeof(global::SharedTravelling.ViewModels.SearchTripsViewModel);
            _typeTable[18] = typeof(global::System.Collections.Generic.IList<global::SharedTravelling.Models.TripsToShowModel>);
            _typeTable[19] = typeof(global::SharedTravelling.Models.TripsToShowModel);
            _typeTable[20] = typeof(global::Windows.UI.Xaml.Visibility);
            _typeTable[21] = typeof(global::SharedTravelling.Views.SearchTrips);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_MainWindowViewModel() { return new global::SharedTravelling.ViewModels.MainWindowViewModel(); }
        private object Activate_4_MainPage() { return new global::SharedTravelling.MainPage(); }
        private object Activate_7_AddCarViewModel() { return new global::SharedTravelling.ViewModels.AddCarViewModel(); }
        private object Activate_9_AddCar() { return new global::SharedTravelling.Views.AddCar(); }
        private object Activate_10_AddTripViewModel() { return new global::SharedTravelling.ViewModels.AddTripViewModel(); }
        private object Activate_12_AddTrip() { return new global::SharedTravelling.Views.AddTrip(); }
        private object Activate_13_RegisterViewModel() { return new global::SharedTravelling.ViewModels.RegisterViewModel(); }
        private object Activate_16_Register() { return new global::SharedTravelling.Views.Register(); }
        private object Activate_17_SearchTripsViewModel() { return new global::SharedTravelling.ViewModels.SearchTripsViewModel(); }
        private object Activate_19_TripsToShowModel() { return new global::SharedTravelling.Models.TripsToShowModel(); }
        private object Activate_21_SearchTrips() { return new global::SharedTravelling.Views.SearchTrips(); }
        private void VectorAdd_11_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.String>)instance;
            var newItem = (global::System.String)item;
            collection.Add(newItem);
        }
        private void VectorAdd_18_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::SharedTravelling.Models.TripsToShowModel>)instance;
            var newItem = (global::SharedTravelling.Models.TripsToShowModel)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  SharedTravelling.ViewModels.MainWindowViewModel
                userType = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_0_MainWindowViewModel;
                userType.AddMemberName("Username");
                userType.AddMemberName("Password");
                userType.AddMemberName("Login");
                userType.AddMemberName("Register");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 1:   //  Object
                xamlType = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  String
                xamlType = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  System.Windows.Input.ICommand
                userType = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 4:   //  SharedTravelling.MainPage
                userType = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_4_MainPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 5:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 6:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 7:   //  SharedTravelling.ViewModels.AddCarViewModel
                userType = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_7_AddCarViewModel;
                userType.AddMemberName("Search");
                userType.AddMemberName("AddTrip");
                userType.AddMemberName("AddCar");
                userType.AddMemberName("OpenMenu");
                userType.AddMemberName("Open");
                userType.AddMemberName("AddCarAction");
                userType.AddMemberName("Brand");
                userType.AddMemberName("Model");
                userType.AddMemberName("Color");
                userType.AddMemberName("Year");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 8:   //  Boolean
                xamlType = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 9:   //  SharedTravelling.Views.AddCar
                userType = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_9_AddCar;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 10:   //  SharedTravelling.ViewModels.AddTripViewModel
                userType = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_10_AddTripViewModel;
                userType.AddMemberName("Search");
                userType.AddMemberName("AddTrip");
                userType.AddMemberName("AddCar");
                userType.AddMemberName("OpenMenu");
                userType.AddMemberName("Open");
                userType.AddMemberName("AddTripAction");
                userType.AddMemberName("Time");
                userType.AddMemberName("Seats");
                userType.AddMemberName("Car");
                userType.AddMemberName("Smoking");
                userType.AddMemberName("Drinking");
                userType.AddMemberName("Eating");
                userType.AddMemberName("CarsToShow");
                userType.AddMemberName("From");
                userType.AddMemberName("To");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 11:   //  System.Collections.Generic.IList`1<String>
                userType = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.CollectionAdd = VectorAdd_11_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 12:   //  SharedTravelling.Views.AddTrip
                userType = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_12_AddTrip;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 13:   //  SharedTravelling.ViewModels.RegisterViewModel
                userType = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_13_RegisterViewModel;
                userType.AddMemberName("Username");
                userType.AddMemberName("Password");
                userType.AddMemberName("DateOfBirth");
                userType.AddMemberName("Register");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 14:   //  System.DateTime
                userType = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 15:   //  System.ValueType
                userType = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 16:   //  SharedTravelling.Views.Register
                userType = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_16_Register;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 17:   //  SharedTravelling.ViewModels.SearchTripsViewModel
                userType = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_17_SearchTripsViewModel;
                userType.AddMemberName("Search");
                userType.AddMemberName("AddTrip");
                userType.AddMemberName("AddCar");
                userType.AddMemberName("OpenMenu");
                userType.AddMemberName("Open");
                userType.AddMemberName("TripsToShow");
                userType.AddMemberName("SearchItems");
                userType.AddMemberName("SelectedSearchItem");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 18:   //  System.Collections.Generic.IList`1<SharedTravelling.Models.TripsToShowModel>
                userType = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.CollectionAdd = VectorAdd_18_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 19:   //  SharedTravelling.Models.TripsToShowModel
                userType = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_19_TripsToShowModel;
                userType.AddMemberName("Username");
                userType.AddMemberName("Time");
                userType.AddMemberName("Seats");
                userType.AddMemberName("Car");
                userType.AddMemberName("Smoking");
                userType.AddMemberName("Drinking");
                userType.AddMemberName("Eating");
                userType.AddMemberName("From");
                userType.AddMemberName("To");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 20:   //  Windows.UI.Xaml.Visibility
                xamlType = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 21:   //  SharedTravelling.Views.SearchTrips
                userType = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_21_SearchTrips;
                userType.SetIsLocalType();
                xamlType = userType;
                break;
            }
            return xamlType;
        }


        private object get_0_MainWindowViewModel_Username(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.MainWindowViewModel)instance;
            return that.Username;
        }
        private void set_0_MainWindowViewModel_Username(object instance, object Value)
        {
            var that = (global::SharedTravelling.ViewModels.MainWindowViewModel)instance;
            that.Username = (global::System.String)Value;
        }
        private object get_1_MainWindowViewModel_Password(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.MainWindowViewModel)instance;
            return that.Password;
        }
        private void set_1_MainWindowViewModel_Password(object instance, object Value)
        {
            var that = (global::SharedTravelling.ViewModels.MainWindowViewModel)instance;
            that.Password = (global::System.String)Value;
        }
        private object get_2_MainWindowViewModel_Login(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.MainWindowViewModel)instance;
            return that.Login;
        }
        private object get_3_MainWindowViewModel_Register(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.MainWindowViewModel)instance;
            return that.Register;
        }
        private object get_4_AddCarViewModel_Search(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.AddCarViewModel)instance;
            return that.Search;
        }
        private object get_5_AddCarViewModel_AddTrip(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.AddCarViewModel)instance;
            return that.AddTrip;
        }
        private object get_6_AddCarViewModel_AddCar(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.AddCarViewModel)instance;
            return that.AddCar;
        }
        private object get_7_AddCarViewModel_OpenMenu(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.AddCarViewModel)instance;
            return that.OpenMenu;
        }
        private void set_7_AddCarViewModel_OpenMenu(object instance, object Value)
        {
            var that = (global::SharedTravelling.ViewModels.AddCarViewModel)instance;
            that.OpenMenu = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_8_AddCarViewModel_Open(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.AddCarViewModel)instance;
            return that.Open;
        }
        private void set_8_AddCarViewModel_Open(object instance, object Value)
        {
            var that = (global::SharedTravelling.ViewModels.AddCarViewModel)instance;
            that.Open = (global::System.Boolean)Value;
        }
        private object get_9_AddCarViewModel_AddCarAction(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.AddCarViewModel)instance;
            return that.AddCarAction;
        }
        private object get_10_AddCarViewModel_Brand(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.AddCarViewModel)instance;
            return that.Brand;
        }
        private void set_10_AddCarViewModel_Brand(object instance, object Value)
        {
            var that = (global::SharedTravelling.ViewModels.AddCarViewModel)instance;
            that.Brand = (global::System.String)Value;
        }
        private object get_11_AddCarViewModel_Model(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.AddCarViewModel)instance;
            return that.Model;
        }
        private void set_11_AddCarViewModel_Model(object instance, object Value)
        {
            var that = (global::SharedTravelling.ViewModels.AddCarViewModel)instance;
            that.Model = (global::System.String)Value;
        }
        private object get_12_AddCarViewModel_Color(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.AddCarViewModel)instance;
            return that.Color;
        }
        private void set_12_AddCarViewModel_Color(object instance, object Value)
        {
            var that = (global::SharedTravelling.ViewModels.AddCarViewModel)instance;
            that.Color = (global::System.String)Value;
        }
        private object get_13_AddCarViewModel_Year(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.AddCarViewModel)instance;
            return that.Year;
        }
        private void set_13_AddCarViewModel_Year(object instance, object Value)
        {
            var that = (global::SharedTravelling.ViewModels.AddCarViewModel)instance;
            that.Year = (global::System.String)Value;
        }
        private object get_14_AddTripViewModel_Search(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.AddTripViewModel)instance;
            return that.Search;
        }
        private object get_15_AddTripViewModel_AddTrip(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.AddTripViewModel)instance;
            return that.AddTrip;
        }
        private object get_16_AddTripViewModel_AddCar(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.AddTripViewModel)instance;
            return that.AddCar;
        }
        private object get_17_AddTripViewModel_OpenMenu(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.AddTripViewModel)instance;
            return that.OpenMenu;
        }
        private void set_17_AddTripViewModel_OpenMenu(object instance, object Value)
        {
            var that = (global::SharedTravelling.ViewModels.AddTripViewModel)instance;
            that.OpenMenu = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_18_AddTripViewModel_Open(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.AddTripViewModel)instance;
            return that.Open;
        }
        private void set_18_AddTripViewModel_Open(object instance, object Value)
        {
            var that = (global::SharedTravelling.ViewModels.AddTripViewModel)instance;
            that.Open = (global::System.Boolean)Value;
        }
        private object get_19_AddTripViewModel_AddTripAction(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.AddTripViewModel)instance;
            return that.AddTripAction;
        }
        private object get_20_AddTripViewModel_Time(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.AddTripViewModel)instance;
            return that.Time;
        }
        private void set_20_AddTripViewModel_Time(object instance, object Value)
        {
            var that = (global::SharedTravelling.ViewModels.AddTripViewModel)instance;
            that.Time = (global::System.String)Value;
        }
        private object get_21_AddTripViewModel_Seats(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.AddTripViewModel)instance;
            return that.Seats;
        }
        private void set_21_AddTripViewModel_Seats(object instance, object Value)
        {
            var that = (global::SharedTravelling.ViewModels.AddTripViewModel)instance;
            that.Seats = (global::System.String)Value;
        }
        private object get_22_AddTripViewModel_Car(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.AddTripViewModel)instance;
            return that.Car;
        }
        private void set_22_AddTripViewModel_Car(object instance, object Value)
        {
            var that = (global::SharedTravelling.ViewModels.AddTripViewModel)instance;
            that.Car = (global::System.String)Value;
        }
        private object get_23_AddTripViewModel_Smoking(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.AddTripViewModel)instance;
            return that.Smoking;
        }
        private void set_23_AddTripViewModel_Smoking(object instance, object Value)
        {
            var that = (global::SharedTravelling.ViewModels.AddTripViewModel)instance;
            that.Smoking = (global::System.Boolean)Value;
        }
        private object get_24_AddTripViewModel_Drinking(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.AddTripViewModel)instance;
            return that.Drinking;
        }
        private void set_24_AddTripViewModel_Drinking(object instance, object Value)
        {
            var that = (global::SharedTravelling.ViewModels.AddTripViewModel)instance;
            that.Drinking = (global::System.Boolean)Value;
        }
        private object get_25_AddTripViewModel_Eating(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.AddTripViewModel)instance;
            return that.Eating;
        }
        private void set_25_AddTripViewModel_Eating(object instance, object Value)
        {
            var that = (global::SharedTravelling.ViewModels.AddTripViewModel)instance;
            that.Eating = (global::System.Boolean)Value;
        }
        private object get_26_AddTripViewModel_CarsToShow(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.AddTripViewModel)instance;
            return that.CarsToShow;
        }
        private void set_26_AddTripViewModel_CarsToShow(object instance, object Value)
        {
            var that = (global::SharedTravelling.ViewModels.AddTripViewModel)instance;
            that.CarsToShow = (global::System.Collections.Generic.IList<global::System.String>)Value;
        }
        private object get_27_AddTripViewModel_From(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.AddTripViewModel)instance;
            return that.From;
        }
        private void set_27_AddTripViewModel_From(object instance, object Value)
        {
            var that = (global::SharedTravelling.ViewModels.AddTripViewModel)instance;
            that.From = (global::System.String)Value;
        }
        private object get_28_AddTripViewModel_To(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.AddTripViewModel)instance;
            return that.To;
        }
        private void set_28_AddTripViewModel_To(object instance, object Value)
        {
            var that = (global::SharedTravelling.ViewModels.AddTripViewModel)instance;
            that.To = (global::System.String)Value;
        }
        private object get_29_RegisterViewModel_Username(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.RegisterViewModel)instance;
            return that.Username;
        }
        private void set_29_RegisterViewModel_Username(object instance, object Value)
        {
            var that = (global::SharedTravelling.ViewModels.RegisterViewModel)instance;
            that.Username = (global::System.String)Value;
        }
        private object get_30_RegisterViewModel_Password(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.RegisterViewModel)instance;
            return that.Password;
        }
        private void set_30_RegisterViewModel_Password(object instance, object Value)
        {
            var that = (global::SharedTravelling.ViewModels.RegisterViewModel)instance;
            that.Password = (global::System.String)Value;
        }
        private object get_31_RegisterViewModel_DateOfBirth(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.RegisterViewModel)instance;
            return that.DateOfBirth;
        }
        private void set_31_RegisterViewModel_DateOfBirth(object instance, object Value)
        {
            var that = (global::SharedTravelling.ViewModels.RegisterViewModel)instance;
            that.DateOfBirth = (global::System.DateTime)Value;
        }
        private object get_32_RegisterViewModel_Register(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.RegisterViewModel)instance;
            return that.Register;
        }
        private object get_33_SearchTripsViewModel_Search(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.SearchTripsViewModel)instance;
            return that.Search;
        }
        private object get_34_SearchTripsViewModel_AddTrip(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.SearchTripsViewModel)instance;
            return that.AddTrip;
        }
        private object get_35_SearchTripsViewModel_AddCar(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.SearchTripsViewModel)instance;
            return that.AddCar;
        }
        private object get_36_SearchTripsViewModel_OpenMenu(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.SearchTripsViewModel)instance;
            return that.OpenMenu;
        }
        private void set_36_SearchTripsViewModel_OpenMenu(object instance, object Value)
        {
            var that = (global::SharedTravelling.ViewModels.SearchTripsViewModel)instance;
            that.OpenMenu = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_37_SearchTripsViewModel_Open(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.SearchTripsViewModel)instance;
            return that.Open;
        }
        private void set_37_SearchTripsViewModel_Open(object instance, object Value)
        {
            var that = (global::SharedTravelling.ViewModels.SearchTripsViewModel)instance;
            that.Open = (global::System.Boolean)Value;
        }
        private object get_38_SearchTripsViewModel_TripsToShow(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.SearchTripsViewModel)instance;
            return that.TripsToShow;
        }
        private void set_38_SearchTripsViewModel_TripsToShow(object instance, object Value)
        {
            var that = (global::SharedTravelling.ViewModels.SearchTripsViewModel)instance;
            that.TripsToShow = (global::System.Collections.Generic.IList<global::SharedTravelling.Models.TripsToShowModel>)Value;
        }
        private object get_39_TripsToShowModel_Username(object instance)
        {
            var that = (global::SharedTravelling.Models.TripsToShowModel)instance;
            return that.Username;
        }
        private void set_39_TripsToShowModel_Username(object instance, object Value)
        {
            var that = (global::SharedTravelling.Models.TripsToShowModel)instance;
            that.Username = (global::System.String)Value;
        }
        private object get_40_TripsToShowModel_Time(object instance)
        {
            var that = (global::SharedTravelling.Models.TripsToShowModel)instance;
            return that.Time;
        }
        private void set_40_TripsToShowModel_Time(object instance, object Value)
        {
            var that = (global::SharedTravelling.Models.TripsToShowModel)instance;
            that.Time = (global::System.String)Value;
        }
        private object get_41_TripsToShowModel_Seats(object instance)
        {
            var that = (global::SharedTravelling.Models.TripsToShowModel)instance;
            return that.Seats;
        }
        private void set_41_TripsToShowModel_Seats(object instance, object Value)
        {
            var that = (global::SharedTravelling.Models.TripsToShowModel)instance;
            that.Seats = (global::System.String)Value;
        }
        private object get_42_TripsToShowModel_Car(object instance)
        {
            var that = (global::SharedTravelling.Models.TripsToShowModel)instance;
            return that.Car;
        }
        private void set_42_TripsToShowModel_Car(object instance, object Value)
        {
            var that = (global::SharedTravelling.Models.TripsToShowModel)instance;
            that.Car = (global::System.String)Value;
        }
        private object get_43_TripsToShowModel_Smoking(object instance)
        {
            var that = (global::SharedTravelling.Models.TripsToShowModel)instance;
            return that.Smoking;
        }
        private void set_43_TripsToShowModel_Smoking(object instance, object Value)
        {
            var that = (global::SharedTravelling.Models.TripsToShowModel)instance;
            that.Smoking = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_44_TripsToShowModel_Drinking(object instance)
        {
            var that = (global::SharedTravelling.Models.TripsToShowModel)instance;
            return that.Drinking;
        }
        private void set_44_TripsToShowModel_Drinking(object instance, object Value)
        {
            var that = (global::SharedTravelling.Models.TripsToShowModel)instance;
            that.Drinking = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_45_TripsToShowModel_Eating(object instance)
        {
            var that = (global::SharedTravelling.Models.TripsToShowModel)instance;
            return that.Eating;
        }
        private void set_45_TripsToShowModel_Eating(object instance, object Value)
        {
            var that = (global::SharedTravelling.Models.TripsToShowModel)instance;
            that.Eating = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_46_TripsToShowModel_From(object instance)
        {
            var that = (global::SharedTravelling.Models.TripsToShowModel)instance;
            return that.From;
        }
        private void set_46_TripsToShowModel_From(object instance, object Value)
        {
            var that = (global::SharedTravelling.Models.TripsToShowModel)instance;
            that.From = (global::System.String)Value;
        }
        private object get_47_TripsToShowModel_To(object instance)
        {
            var that = (global::SharedTravelling.Models.TripsToShowModel)instance;
            return that.To;
        }
        private void set_47_TripsToShowModel_To(object instance, object Value)
        {
            var that = (global::SharedTravelling.Models.TripsToShowModel)instance;
            that.To = (global::System.String)Value;
        }
        private object get_48_SearchTripsViewModel_SearchItems(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.SearchTripsViewModel)instance;
            return that.SearchItems;
        }
        private void set_48_SearchTripsViewModel_SearchItems(object instance, object Value)
        {
            var that = (global::SharedTravelling.ViewModels.SearchTripsViewModel)instance;
            that.SearchItems = (global::System.Collections.Generic.IList<global::System.String>)Value;
        }
        private object get_49_SearchTripsViewModel_SelectedSearchItem(object instance)
        {
            var that = (global::SharedTravelling.ViewModels.SearchTripsViewModel)instance;
            return that.SelectedSearchItem;
        }
        private void set_49_SearchTripsViewModel_SelectedSearchItem(object instance, object Value)
        {
            var that = (global::SharedTravelling.ViewModels.SearchTripsViewModel)instance;
            that.SelectedSearchItem = (global::System.String)Value;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember xamlMember = null;
            global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "SharedTravelling.ViewModels.MainWindowViewModel.Username":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.MainWindowViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "Username", "String");
                xamlMember.Getter = get_0_MainWindowViewModel_Username;
                xamlMember.Setter = set_0_MainWindowViewModel_Username;
                break;
            case "SharedTravelling.ViewModels.MainWindowViewModel.Password":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.MainWindowViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "Password", "String");
                xamlMember.Getter = get_1_MainWindowViewModel_Password;
                xamlMember.Setter = set_1_MainWindowViewModel_Password;
                break;
            case "SharedTravelling.ViewModels.MainWindowViewModel.Login":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.MainWindowViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "Login", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_2_MainWindowViewModel_Login;
                xamlMember.SetIsReadOnly();
                break;
            case "SharedTravelling.ViewModels.MainWindowViewModel.Register":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.MainWindowViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "Register", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_3_MainWindowViewModel_Register;
                xamlMember.SetIsReadOnly();
                break;
            case "SharedTravelling.ViewModels.AddCarViewModel.Search":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.AddCarViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "Search", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_4_AddCarViewModel_Search;
                xamlMember.SetIsReadOnly();
                break;
            case "SharedTravelling.ViewModels.AddCarViewModel.AddTrip":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.AddCarViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "AddTrip", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_5_AddCarViewModel_AddTrip;
                xamlMember.SetIsReadOnly();
                break;
            case "SharedTravelling.ViewModels.AddCarViewModel.AddCar":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.AddCarViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "AddCar", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_6_AddCarViewModel_AddCar;
                xamlMember.SetIsReadOnly();
                break;
            case "SharedTravelling.ViewModels.AddCarViewModel.OpenMenu":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.AddCarViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "OpenMenu", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_7_AddCarViewModel_OpenMenu;
                xamlMember.Setter = set_7_AddCarViewModel_OpenMenu;
                break;
            case "SharedTravelling.ViewModels.AddCarViewModel.Open":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.AddCarViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "Open", "Boolean");
                xamlMember.Getter = get_8_AddCarViewModel_Open;
                xamlMember.Setter = set_8_AddCarViewModel_Open;
                break;
            case "SharedTravelling.ViewModels.AddCarViewModel.AddCarAction":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.AddCarViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "AddCarAction", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_9_AddCarViewModel_AddCarAction;
                xamlMember.SetIsReadOnly();
                break;
            case "SharedTravelling.ViewModels.AddCarViewModel.Brand":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.AddCarViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "Brand", "String");
                xamlMember.Getter = get_10_AddCarViewModel_Brand;
                xamlMember.Setter = set_10_AddCarViewModel_Brand;
                break;
            case "SharedTravelling.ViewModels.AddCarViewModel.Model":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.AddCarViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "Model", "String");
                xamlMember.Getter = get_11_AddCarViewModel_Model;
                xamlMember.Setter = set_11_AddCarViewModel_Model;
                break;
            case "SharedTravelling.ViewModels.AddCarViewModel.Color":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.AddCarViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "Color", "String");
                xamlMember.Getter = get_12_AddCarViewModel_Color;
                xamlMember.Setter = set_12_AddCarViewModel_Color;
                break;
            case "SharedTravelling.ViewModels.AddCarViewModel.Year":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.AddCarViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "Year", "String");
                xamlMember.Getter = get_13_AddCarViewModel_Year;
                xamlMember.Setter = set_13_AddCarViewModel_Year;
                break;
            case "SharedTravelling.ViewModels.AddTripViewModel.Search":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.AddTripViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "Search", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_14_AddTripViewModel_Search;
                xamlMember.SetIsReadOnly();
                break;
            case "SharedTravelling.ViewModels.AddTripViewModel.AddTrip":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.AddTripViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "AddTrip", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_15_AddTripViewModel_AddTrip;
                xamlMember.SetIsReadOnly();
                break;
            case "SharedTravelling.ViewModels.AddTripViewModel.AddCar":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.AddTripViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "AddCar", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_16_AddTripViewModel_AddCar;
                xamlMember.SetIsReadOnly();
                break;
            case "SharedTravelling.ViewModels.AddTripViewModel.OpenMenu":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.AddTripViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "OpenMenu", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_17_AddTripViewModel_OpenMenu;
                xamlMember.Setter = set_17_AddTripViewModel_OpenMenu;
                break;
            case "SharedTravelling.ViewModels.AddTripViewModel.Open":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.AddTripViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "Open", "Boolean");
                xamlMember.Getter = get_18_AddTripViewModel_Open;
                xamlMember.Setter = set_18_AddTripViewModel_Open;
                break;
            case "SharedTravelling.ViewModels.AddTripViewModel.AddTripAction":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.AddTripViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "AddTripAction", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_19_AddTripViewModel_AddTripAction;
                xamlMember.SetIsReadOnly();
                break;
            case "SharedTravelling.ViewModels.AddTripViewModel.Time":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.AddTripViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "Time", "String");
                xamlMember.Getter = get_20_AddTripViewModel_Time;
                xamlMember.Setter = set_20_AddTripViewModel_Time;
                break;
            case "SharedTravelling.ViewModels.AddTripViewModel.Seats":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.AddTripViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "Seats", "String");
                xamlMember.Getter = get_21_AddTripViewModel_Seats;
                xamlMember.Setter = set_21_AddTripViewModel_Seats;
                break;
            case "SharedTravelling.ViewModels.AddTripViewModel.Car":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.AddTripViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "Car", "String");
                xamlMember.Getter = get_22_AddTripViewModel_Car;
                xamlMember.Setter = set_22_AddTripViewModel_Car;
                break;
            case "SharedTravelling.ViewModels.AddTripViewModel.Smoking":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.AddTripViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "Smoking", "Boolean");
                xamlMember.Getter = get_23_AddTripViewModel_Smoking;
                xamlMember.Setter = set_23_AddTripViewModel_Smoking;
                break;
            case "SharedTravelling.ViewModels.AddTripViewModel.Drinking":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.AddTripViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "Drinking", "Boolean");
                xamlMember.Getter = get_24_AddTripViewModel_Drinking;
                xamlMember.Setter = set_24_AddTripViewModel_Drinking;
                break;
            case "SharedTravelling.ViewModels.AddTripViewModel.Eating":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.AddTripViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "Eating", "Boolean");
                xamlMember.Getter = get_25_AddTripViewModel_Eating;
                xamlMember.Setter = set_25_AddTripViewModel_Eating;
                break;
            case "SharedTravelling.ViewModels.AddTripViewModel.CarsToShow":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.AddTripViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "CarsToShow", "System.Collections.Generic.IList`1<String>");
                xamlMember.Getter = get_26_AddTripViewModel_CarsToShow;
                xamlMember.Setter = set_26_AddTripViewModel_CarsToShow;
                break;
            case "SharedTravelling.ViewModels.AddTripViewModel.From":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.AddTripViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "From", "String");
                xamlMember.Getter = get_27_AddTripViewModel_From;
                xamlMember.Setter = set_27_AddTripViewModel_From;
                break;
            case "SharedTravelling.ViewModels.AddTripViewModel.To":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.AddTripViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "To", "String");
                xamlMember.Getter = get_28_AddTripViewModel_To;
                xamlMember.Setter = set_28_AddTripViewModel_To;
                break;
            case "SharedTravelling.ViewModels.RegisterViewModel.Username":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.RegisterViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "Username", "String");
                xamlMember.Getter = get_29_RegisterViewModel_Username;
                xamlMember.Setter = set_29_RegisterViewModel_Username;
                break;
            case "SharedTravelling.ViewModels.RegisterViewModel.Password":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.RegisterViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "Password", "String");
                xamlMember.Getter = get_30_RegisterViewModel_Password;
                xamlMember.Setter = set_30_RegisterViewModel_Password;
                break;
            case "SharedTravelling.ViewModels.RegisterViewModel.DateOfBirth":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.RegisterViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "DateOfBirth", "System.DateTime");
                xamlMember.Getter = get_31_RegisterViewModel_DateOfBirth;
                xamlMember.Setter = set_31_RegisterViewModel_DateOfBirth;
                break;
            case "SharedTravelling.ViewModels.RegisterViewModel.Register":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.RegisterViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "Register", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_32_RegisterViewModel_Register;
                xamlMember.SetIsReadOnly();
                break;
            case "SharedTravelling.ViewModels.SearchTripsViewModel.Search":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.SearchTripsViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "Search", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_33_SearchTripsViewModel_Search;
                xamlMember.SetIsReadOnly();
                break;
            case "SharedTravelling.ViewModels.SearchTripsViewModel.AddTrip":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.SearchTripsViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "AddTrip", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_34_SearchTripsViewModel_AddTrip;
                xamlMember.SetIsReadOnly();
                break;
            case "SharedTravelling.ViewModels.SearchTripsViewModel.AddCar":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.SearchTripsViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "AddCar", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_35_SearchTripsViewModel_AddCar;
                xamlMember.SetIsReadOnly();
                break;
            case "SharedTravelling.ViewModels.SearchTripsViewModel.OpenMenu":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.SearchTripsViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "OpenMenu", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_36_SearchTripsViewModel_OpenMenu;
                xamlMember.Setter = set_36_SearchTripsViewModel_OpenMenu;
                break;
            case "SharedTravelling.ViewModels.SearchTripsViewModel.Open":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.SearchTripsViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "Open", "Boolean");
                xamlMember.Getter = get_37_SearchTripsViewModel_Open;
                xamlMember.Setter = set_37_SearchTripsViewModel_Open;
                break;
            case "SharedTravelling.ViewModels.SearchTripsViewModel.TripsToShow":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.SearchTripsViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "TripsToShow", "System.Collections.Generic.IList`1<SharedTravelling.Models.TripsToShowModel>");
                xamlMember.Getter = get_38_SearchTripsViewModel_TripsToShow;
                xamlMember.Setter = set_38_SearchTripsViewModel_TripsToShow;
                break;
            case "SharedTravelling.Models.TripsToShowModel.Username":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.Models.TripsToShowModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "Username", "String");
                xamlMember.Getter = get_39_TripsToShowModel_Username;
                xamlMember.Setter = set_39_TripsToShowModel_Username;
                break;
            case "SharedTravelling.Models.TripsToShowModel.Time":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.Models.TripsToShowModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "Time", "String");
                xamlMember.Getter = get_40_TripsToShowModel_Time;
                xamlMember.Setter = set_40_TripsToShowModel_Time;
                break;
            case "SharedTravelling.Models.TripsToShowModel.Seats":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.Models.TripsToShowModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "Seats", "String");
                xamlMember.Getter = get_41_TripsToShowModel_Seats;
                xamlMember.Setter = set_41_TripsToShowModel_Seats;
                break;
            case "SharedTravelling.Models.TripsToShowModel.Car":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.Models.TripsToShowModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "Car", "String");
                xamlMember.Getter = get_42_TripsToShowModel_Car;
                xamlMember.Setter = set_42_TripsToShowModel_Car;
                break;
            case "SharedTravelling.Models.TripsToShowModel.Smoking":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.Models.TripsToShowModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "Smoking", "Windows.UI.Xaml.Visibility");
                xamlMember.Getter = get_43_TripsToShowModel_Smoking;
                xamlMember.Setter = set_43_TripsToShowModel_Smoking;
                break;
            case "SharedTravelling.Models.TripsToShowModel.Drinking":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.Models.TripsToShowModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "Drinking", "Windows.UI.Xaml.Visibility");
                xamlMember.Getter = get_44_TripsToShowModel_Drinking;
                xamlMember.Setter = set_44_TripsToShowModel_Drinking;
                break;
            case "SharedTravelling.Models.TripsToShowModel.Eating":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.Models.TripsToShowModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "Eating", "Windows.UI.Xaml.Visibility");
                xamlMember.Getter = get_45_TripsToShowModel_Eating;
                xamlMember.Setter = set_45_TripsToShowModel_Eating;
                break;
            case "SharedTravelling.Models.TripsToShowModel.From":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.Models.TripsToShowModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "From", "String");
                xamlMember.Getter = get_46_TripsToShowModel_From;
                xamlMember.Setter = set_46_TripsToShowModel_From;
                break;
            case "SharedTravelling.Models.TripsToShowModel.To":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.Models.TripsToShowModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "To", "String");
                xamlMember.Getter = get_47_TripsToShowModel_To;
                xamlMember.Setter = set_47_TripsToShowModel_To;
                break;
            case "SharedTravelling.ViewModels.SearchTripsViewModel.SearchItems":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.SearchTripsViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "SearchItems", "System.Collections.Generic.IList`1<String>");
                xamlMember.Getter = get_48_SearchTripsViewModel_SearchItems;
                xamlMember.Setter = set_48_SearchTripsViewModel_SearchItems;
                break;
            case "SharedTravelling.ViewModels.SearchTripsViewModel.SelectedSearchItem":
                userType = (global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SharedTravelling.ViewModels.SearchTripsViewModel");
                xamlMember = new global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlMember(this, "SelectedSearchItem", "String");
                xamlMember.Getter = get_49_SearchTripsViewModel_SelectedSearchItem;
                xamlMember.Setter = set_49_SearchTripsViewModel_SelectedSearchItem;
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlSystemBaseType
    {
        global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::SharedTravelling.SharedTravelling_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

